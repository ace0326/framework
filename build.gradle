/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
//    id "org.springframework.boot" version "2.2.7.RELEASE"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
}

ext {
    lombokVersion = "1.18.12"
}

allprojects {
    group = 'com.sky.framework'
    version = '1.0.2-SNAPSHOT'
}


subprojects {
    apply plugin: "java"
//    apply plugin: "idea"
    apply plugin: "maven"
    apply plugin: "maven-publish"
    apply plugin: "io.spring.dependency-management"
    apply from: "${rootDir}/gradle/jacoco.gradle"
    apply from: "${rootDir}/gradle/checkstyle.gradle"
    apply from: "${rootDir}/gradle/dependency-report.gradle"

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:2.2.7.RELEASE"
        }
        dependencies {
//            dependencySet(group: 'org.slf4j', version: '1.7.7') {
//                entry 'slf4j-api'
//                entry 'slf4j-simple'
//            }
            dependency "mysql:mysql-connector-java:8.0.20"
        }
    }

    dependencies {
        implementation "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    }


    repositories {
        mavenLocal()
        maven {
            url = uri('https://repo.maven.apache.org/maven2')
        }
    }


    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        withSourcesJar()
//        withJavadocJar()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

//    task myJavadocs(type: Javadoc) {
//        source = sourceSets.main.allJava
//    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options {
            encoding "UTF-8"
            charSet 'UTF-8'
        }

    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}
